schema-version: 1.0
#extractor-version: 1 
extractor-id: 262
integration: Syslog
vendor-name: OpenVPN
product-name: OpenVPN Access Server
source-name: OPENVPN
source-type: FIREWALL
source-description: Extractor for OpenVPN Access Server Events
provides-streams:
- AUTHENTICATION
- FIREWALL
- IAM
master-filters:
- '^(?:\<\d+\>)?\w{3}\s+\d{1,2}\s+\d{2}\:\d{2}\:\d{2}\s+\S+\s+openvpnas\:\s+\[\-\]\s+'
event-details:
- first-match: 'openvpnas\:\s+\[\-\]\s+LOG\s+ERR\:.*?\"error\"\:'
  decoder: custom
  decoder-regex: '\"([\w\_]+)\"\:\s+\"?([^\"\,]+)'
  event-key-format: '{error}'
  event-key-mapping:
    'disconnected because user-specific properties prevent concurrent VPN connections by this user': 
      annotate:
        Stream: FIREWALL
        Action: PACKET_BLOCKED
        Status: PASSED
      translate: 
        real_ip: SrcIP
        DstIP: DstIP
        proto: Proto
        port: SrcPort
        DstPort: DstPort
        App: App
        bytes_out: TXLen
        bytes_in: RXLen
    
  fallback:
    annotate:
      EventName: Generic OpenVPN Access Server Event
      Stream: OTHER

  globals:
    translate:
      SystemTstamp: SystemTstamp
      System: System

- first-match: 'openvpnas\:\s+\[\-\]\s+AUTH\s+SUCCESS\s+\{'
  decoder: regex
  decoder-regex: '^(?:\<\d+\>)?(?P<datetime>\w{3}\s+\d{1,2}\s+\d{2}\:\d{2}\:\d{2})\s+(?P<hostname>\S+)\s+\S+\:.*?(?P<action>session\s+continuation\s+succeeded).*?upvt\_hw\_addr\:\s+(?P<src>[\w\.\:]+)'
  event-key-format: '{action}'
  event-key-mapping:
    'session continuation succeeded': 
      annotate:
        Stream: FIREWALL
        Action: SESSION_ESTABLISHED
        Status: PASSED
      translate: 
        src: SrcIP
        DstIP: DstIP
        Proto: Proto
        SrcPort: SrcPort
        DstPort: DstPort
        App: App
        TXLen: TXLen
        RXLen: RXLen
    
  fallback:
    annotate:
      EventName: Generic OpenVPN Access Server Event
      Stream: OTHER

  globals:
    translate:
      datetime: SystemTstamp
      hostname: System

- first-match: 'openvpnas\:\s+\[\-\]\s+\[OVPN\s+\d+\]\s+OUT\:.*?authentication\s+deferred'
  decoder: regex
  decoder-regex: '^(?:\<\d+\>)?(?P<datetime>\w{3}\s+\d{1,2}\s+\d{2}\:\d{2}\:\d{2})\s+(?P<hostname>\S+)\s+\S+\:.*?\d{4}\s+(?P<src>[\d\.]+).*?(?P<action>authentication\s+deferred).*?username\s+(?P<user>\S+)'
  event-key-format: '{action}'
  event-key-mapping:
    'authentication deferred': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: PASSED
      translate: 
        user: User
        src: SrcIP
        AuthProto: AuthProto

  fallback:
    annotate:
      EventName: Generic OpenVPN Access Server Event
      Stream: OTHER

  globals:
    translate:
      datetime: SystemTstamp
      hostname: System

- first-match: 'openvpnas\:\s+\[\-\].*?AuthLDAP\:'
  decoder: regex
  decoder-regex: '^(?:\<\d+\>)?(?P<datetime>\w{3}\s+\d{1,2}\s+\d{2}\:\d{2}\:\d{2})\s+(?P<hostname>\S+)\s+\S+\:.*?AuthLDAP\:\s+(?P<msg>.*?(?P<action>remapped)\s+to\s+canonical\s+form\s+(?P<user>\S+).*)'
  event-key-format: '{action}'
  event-key-mapping:
    'remapped': 
      annotate:
        Stream: IAM
        Action: USER_UPDATED
        Status: PASSED
      translate: 
        user: User
        Role: Role
        TargetUser: TargetUser
    
  fallback:
    annotate:
      EventName: Generic OpenVPN Access Server Event
      Stream: OTHER

  globals:
    translate:
      datetime: SystemTstamp
      hostname: System

- first-match: 'openvpnas\:\s+\[\-\]\s+\[OVPN\s+\d+\]\s+OUT\:.*?Inactivity\s+timeout'
  decoder: regex
  decoder-regex: '^(?:\<\d+\>)?(?P<datetime>\w{3}\s+\d{1,2}\s+\d{2}\:\d{2}\:\d{2})\s+(?P<hostname>\S+)\s+\S+\:\s+\[\-\].*?\[(?P<user>\S+)\s+(?P<msg>(?P<action>Inactivity\s+timeout).*)'
  event-key-format: ''
  event-key-mapping:
    '': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGOUT
        Status: PASSED
      translate: 
        user: User
        SrcIP: SrcIP
        AuthProto: AuthProto
    
  fallback:
    annotate:
      EventName: Generic OpenVPN Access Server Event
      Stream: OTHER

  globals:
    translate:
      datetime: SystemTstamp
      hostname: System