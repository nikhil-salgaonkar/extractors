schema-version: 1.0
#extractor-version: 1
extractor-id: 56
integration: Syslog
vendor-name: Linux
product-name: ALL
source-name: NIX
source-type: OS
source-description: Extractor for NIX OS Events
provides-streams:
- AUTHENTICATION
- AUDITD
- IAM
master-filters:
- '^(?:\<\d+\>)?[\w\-\:\s\+\.\d]+(?:systemd-logind|sshd|cron|internal-sftp|sftpd|syslog|sudo|tsm|su|login|saphostexec|sftp-server|sapdbctrl|pkexec|polkit-agent-helper-\d+|CRON|LNXADM\w+)(?:\s?\[\d+\]\:|\:)'
- '^(?:\<\d+\>\d+\s+)?\d{4}\-\d{1,2}\-\d{2}T\d{2}\:\d{2}\:\d+[\.\w\+\:]+\s+\S+\s+(?:CRON|audispd|sudo)\s+(?:[\d\s\-]+)'
event-details:
- first-match: '\[\d+\]\:\s+Accepted\s+password\s+for\s+'
  decoder: regex
  decoder-regex: '(?P<hostname>\S+)\s+(?P<daemon>\w+)\[(?P<pid>\d+)\]\:\s+(?P<msg>(?P<action>Accepted\s+password)\s+for\s+(?P<user>\S+)\s+from\s+(?P<src>[\d\.]+)\s+.*?port\s+(?P<sport>\d+)\s+.*)'
  event-key-format: '{action}'
  event-key-mapping:
    'Accepted password': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: PASSED
        AuthProto: SSH
      translate:
        src: SrcIP
        user: User 
         
  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: '\[\d+\]\:\s+input_userauth_request\:\s+invalid\s+user\s+'
  decoder: regex
  decoder-regex: '(?:(?P<hostname>\S+)\s+)?(?P<daemon>\w+)\[(?P<pid>\d+)\]\:\s+(?P<msg>.*?\s+(?P<action>invalid\s+user)\s+(?P<user>\S+))'
  event-key-format: '{action}'
  event-key-mapping:
    'invalid user': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: FAILED
        AuthProto: SSH
        Reason: INVALID_USER 
      translate:
        user: User
        src: SrcIP
        
  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: '\[\d+\]\:\s+Invalid\s+user\s+[\S]+\s+from\s+[\w\.\:]+'
  decoder: regex
  decoder-regex: '^(?:\<\d+\>)?(?P<datetime>.*?)\s+(?P<daemon>\w+)\[(?P<pid>\d+)\]\:\s+(?P<msg>(?P<action>Invalid\s+user)\s+(?P<user>\S+)\s+from\s+(?P<src>[abcdef\d\:\.\-]+))'
  event-key-format: '{action}'
  event-key-mapping:
    'Invalid user': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: FAILED
        AuthProto: SSH
        Reason: INVALID_USER
      translate:
        user: User
        src: SrcIP       

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      datetime: SystemTstamp

- first-match: '\[\d+\]\:[\(\w\:\_\s\)]+session\s+closed\s+for\s+user\s+\S+'
  decoder: regex
  decoder-regex: '(?P<hostname>\S+)\s+(?P<daemon>\w+)\[(?P<pid>\d+)\]\:.*?\s+(?P<msg>(?P<action>session\s+closed)\s+for\s+user\s+(?P<user>\S+))'
  event-key-format: '{action}'
  event-key-mapping:
    'session closed': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGOUT
        Status: PASSED
        AuthProto: SSH
      translate:
        user: User
        src: SrcIP 

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: '\[\d+\]\:\s+session\s+closed\s+for\s+local\s+user\s+\S+\s+from\s+\['
  decoder: regex
  decoder-regex: '(?P<hostname>\S+)\s+(?P<daemon>\S+)\[(?P<pid>\d+)\]\:\s+(?P<msg>(?P<action>session\s+closed)\s+for\s+local\s+user\s+(?P<user>\S+)\s+from\s+\[(?P<src>[abcdef\d\:\.\-]+)\])'
  event-key-format: '{action}'
  event-key-mapping:
    'session closed': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGOUT
        Status: PASSED
      translate:
        user: User
        src: SrcIP
        AuthProto: AuthProto        

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: 'PAM\:\s+authentication\s+error\s'
  decoder: regex
  decoder-regex: '^(?:\<\d+\>)?(?P<datetime>.*?)\s+(?P<daemon>\w+)\[(?P<pid>\d+)\]\:\s+(?P<msg>.*?(?P<action>authentication\s+error)\s+for\s+(?P<user>.*?)\s+from\s+(?P<src>\d+.\d+.\d+.\d+))'
  event-key-format: '{action}'
  event-key-mapping:
    'authentication error': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: FAILED
        AuthProto: SSH
      translate:
        reason: Reason
        user: User
        src: SrcIP 
        
  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      datetime: SystemTstamp    

- first-match: 'PAM\:\s+password\s+authentication\s+failed\s+for\s+'
  decoder: regex
  decoder-regex: '(?:(?P<hostname>\S+)\s)?(?P<daemon>\w+)\[(?P<pid>\d+)\]\:.*?\:\s+(?P<msg>.*?\:\spassword\s(?P<action>authentication\sfailed)\sfor\s(?P<user>.*?)\:\s.*)'
  event-key-format: '{action}'
  event-key-mapping:
    'authentication failed': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: FAILED
        AuthProto: SSH
        Reason: INVALID_PASSWORD 
      translate:
        user: User
        src: SrcIP

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: 'PAM\:\s+password\s+authentication\s+accepted\s+for\s+'
  decoder: regex
  decoder-regex: '(?:(?P<hostname>\S+)\s)?(?P<daemon>\w+)\[(?P<pid>\d+)\]\:.*?\:\s+(?P<msg>.*?\:\spassword\s(?P<action>authentication\saccepted)\sfor\s(?P<user>.*))'
  event-key-format: '{action}'
  event-key-mapping:
    'authentication accepted': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: PASSED
        AuthProto: SSH
      translate:
        user: User
        src: SrcIP

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: 'Login\s+successful\s+for\s+\S+\s+from\s+[\w\.\:]+'
  decoder: regex
  decoder-regex: '(?P<hostname>\S+)\:\s+(?P<daemon>\S+)\:\s+(?P<msg>(?P<action>Login\s+successful)\s+for\s+(?P<user>\S+)\s+from(?:\s+(?P<src>[abcdef\d\:\.\-]+))?.*)'
  event-key-format: '{action}'
  event-key-mapping:
    'Login successful': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: PASSED
      translate:
        user: User
        src: SrcIP
        AuthProto: AuthProto
        
  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: 'User.*logged\s+out'
  decoder: regex
  decoder-regex: '^(?:\<\d+\>)?(?P<datetime>\w+\s+\d+\s+[\d\:]+)\s+(?P<hostname>[\w\-]+)\:?\s+(?P<daemon>[\w\-]+)(?:\[(?P<pid>\d+)\])?\:\s+(?P<msg>.*?User[\:\s]+(?P<user>\S+).*?(?:from\s+(?P<src>[\d\.]+).*?)?(?P<action>logged\s+out)\.?)'
  event-key-format: '{action}'
  event-key-mapping:
    'logged out': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGOUT
        Status: PASSED
      translate:
        AuthProto: AuthProto
        user: User
        src: SrcIP       

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System
      datetime: SystemTstamp   

- first-match: 'New\s+user\s+\S+\s+logged\s+in'
  decoder: regex
  decoder-regex: '(?P<hostname>\S+)\s+(?P<daemon>\S+)\[(?P<pid>\d+)\]\:\s+(?P<msg>.*?user\s+(?P<user>\S+)\s+(?P<action>logged\s+in)\.)'
  event-key-format: '{action}'
  event-key-mapping:
    'logged in': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: PASSED
      translate:
        AuthProto: AuthProto
        user: User
        src: SrcIP 

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: '\[\d+\]\:[\s\w\:]+(?:Authentication|authentication)\s+(?:failure|failures)\s+for\s+'
  decoder: regex
  decoder-regex: '(?:(?P<hostname>\S+)\s+)?(?:(?:err|info|warn)\s+)?(?P<daemon>\S+)\[(?P<pid>\d+)\]\:\s+(?P<msg>.*?(?P<action>(?:Authentication|authentication)\s+(?:failure|failures))\s+for\s+(?P<user>\S+)(?:\s+from\s+(?P<src>.*))?)'
  event-key-format: '{action}'
  event-key-mapping:
    'Authentication failure': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: FAILED
        AuthProto: SSH
        Reason: INVALID_PASSWORD
      translate:
        user: User
        src: SrcIP 
    'authentication failures': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: FAILED
        AuthProto: SSH
        Reason: INVALID_PASSWORD
      translate:
        user: User
        src: SrcIP
        
  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: '\[\d+\]\:[\s\w\_\:\(\)\-]+authentication\s+(?:failure|failures)\;\s+logname\='
  decoder: regex
  decoder-regex: '\s+(?P<hostname>\S+)\s+(?P<daemon>\S+)\[(?P<pid>\d+)\]\:\s+.*?(?P<msg>(?P<action>authentication\s+(?:failure|failures))\;.*?uid\=(?P<uid>\d+).*?ruser\=(?P<ruser>\S+|)\s+rhost\=(?P<src>\S+|)(?:\s+user\=(?P<user>.*))?)'
  event-key-format: '{action}'
  event-key-mapping:
    'authentication failure': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: FAILED
        AuthProto: SSH
        Reason: INVALID_PASSWORD
      translate:
        ruser: User
        src: SrcIP  
    'authentication failures': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: FAILED
        AuthProto: SSH
        Reason: INVALID_PASSWORD
      translate:
        ruser: User 
        src: SrcIP

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: '(?:su|sudo)\:.*?authentication\s+failure\;\s+logname\='
  decoder: regex
  decoder-regex: '\s+(?P<hostname>\S+)\s+(?P<daemon>\w+)\:\s+.*?(?P<msg>(?P<action>authentication\s+failure)\;.*?uid\=(?P<uid>\d+).*?ruser\=(?P<ruser>\S+|)\s+rhost\=(?P<src>\S+|)(?:\s+user\=(?P<user>.*))?)'
  event-key-format: '{action}'
  event-key-mapping:
    'authentication failure': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: FAILED
        AuthProto: SSH
        Reason: INVALID_PASSWORD
      translate:
        ruser: User
        src: SrcIP

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System

- first-match: '\[\d+\]\:\s+.*?Received\s+disconnect\s+from\s+'
  decoder: regex
  decoder-regex: '\s+(?:(?P<hostname>[\w\-]+)\:?\s+)?(?P<daemon>\S+)\[(?P<pid>\d+)\]\:.*?(?P<msg>(?P<action>Received\s+disconnect)\s+from\s+(?P<src>[\d\.]+)\:?(?:\s+port\s+(?P<sport>\d+)\:\d+)?.*)'
  event-key-format: '{action}'
  event-key-mapping:
    'Received disconnect': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGOUT
        Status: PASSED
        AuthProto: SSH
      translate:
        src: SrcIP
        user: User

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System    

- first-match: '\[\d+\]\:[\s\w\_\:\(\)\-]+session\s+opened\s+for\s+'
  decoder: regex
  decoder-regex: '(?:(?P<hostname>\S+)\s+)?(?P<daemon>\S+)\[(?P<pid>\d+)\]\:.*?(?P<msg>(?P<action>session\s+opened)\s+for.*?user\s+(?P<user>\S+)\s+(?:by\s+\(uid\=(?P<uid>\d+)\))?(?:from\s+\[(?P<src>[\d\.]+)\])?)'
  event-key-format: '{action}'
  event-key-mapping:
    'session opened': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: PASSED
      translate:
        src: SrcIP
        user: User
        AuthProto: AuthProto

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System     

- first-match: '\[\d+\]\:[\s\w\_\:\(\)\-]+session\s+closed\s+for\s+'
  decoder: regex
  decoder-regex: '(?:(?P<hostname>\S+)\s+)?(?P<daemon>\S+)\[(?P<pid>\d+)\]\:.*?(?P<msg>(?P<action>session\s+closed)\s+for.*?user\s+(?P<user>\S+)(?:\s+by\s+\(uid\=(?P<uid>\d+)\))?(?:\s+from\s+\[(?P<src>[\d\.]+)\])?)'
  event-key-format: '{action}'
  event-key-mapping:
    'session closed': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGOUT
        Status: PASSED
      translate:
        src: SrcIP
        user: User
        AuthProto: AuthProto

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System     

- first-match: '^(?:\<\d+\>)?\w{3}\s+\d{1,2}\s+\d{2}\:\d{2}\:\d{2}\s+\S+\s+\w+\:\s+.*?session\s+opened\s+for\s+'
  decoder: regex
  decoder-regex: '(?:(?P<hostname>\S+)\s+)?(?P<daemon>\w+)\:\s+.*?(?P<msg>(?P<action>session\s+opened)\s+for.*?user\s+(?P<user>\S+).*)'
  event-key-format: '{action}'
  event-key-mapping:
    'session opened': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: PASSED
      translate:
        AuthProto: AuthProto
        user: User
        src: SrcIP        

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System    

- first-match: '^(?:\<\d+\>)?\w{3}\s+\d{1,2}\s+\d{2}\:\d{2}\:\d{2}\s+\S+\s+\w+\:[\s\w\_\:\(\)\-]+session\s+closed\s+for\s+'
  decoder: regex
  decoder-regex: '(?:(?P<hostname>\S+)\s+)?(?P<daemon>\w+)\:\s+.*?(?P<msg>(?P<action>session\s+closed)\s+for.*?user\s+(?P<user>\S+).*)'
  event-key-format: '{action}'
  event-key-mapping:
   'session closed': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGOUT
        Status: PASSED
      translate:
        AuthProto: AuthProto
        user: User
        src: SrcIP 

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System    

- first-match: 'New\s+session\s+\d+\s+of\s+user\s+'
  decoder: regex
  decoder-regex: '(?:(?P<hostname>\S+)\s+)?(?P<daemon>\S+)\:\s+.*?(?P<msg>(?P<action>New\s+session)\s+\d+\s+of\s+user\s+(?P<user>\S+).*)'
  event-key-format: '{action}'
  event-key-mapping:
    'New session': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: PASSED
      translate:
        AuthProto: AuthProto
        user: User
        src: SrcIP 

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System    

- first-match: '^(?:\<\d+\>\d+\s+)?\d{4}\-\d{1,2}\-\d{2}T\d{2}\:\d{2}\:\d+[\.\w\+\:]+\s+\S+\s+\w+\s+[\-\s\w\_\:\(\)]+\:\s+session\s+(?:closed|opened)\s+for\s+user\s+\S+\s+'
  decoder: regex
  decoder-regex: '(?P<datetime>\d+\-\d+\-\d+T\d+\:\d+\:\d+)[\.\w\:\+]+\s+(?P<hostname>\S+)\s+(?P<daemon>\S+)[\-\s\d]+pam\_unix\(\S+\:session\)\:\s+(?P<message>(?P<action>session\s+(?:closed|opened))\s+for\s+user\s+(?P<user>\S+))'
  event-key-format: '{action}'
  event-key-mapping:
    'session opened':
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: PASSED
      translate:
        user: User
        src: SrcIP
        AuthProto: AuthProto  
    'session closed':
      annotate:
        Stream: AUTHENTICATION
        Action: LOGOUT
        Status: PASSED
      translate:
        user: User
        src: SrcIP
        AuthProto: AuthProto    

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      datetime: SystemTstamp
      hostname: System      

- first-match: 'audispd[\s\-]+node\=\S+\s+type\=\S+\s+'
  decoder: regex
  decoder-regex: '(?P<datetime>\d+\-\d+\-\d+T\d+\:\d+\:\d+)[\.\w\:\+]+\s+(?P<hostname>\S+)\s+(?P<daemon>\S+)[\-\s\d]+\s+node\=\S+\s+type\=(?P<type>\S+)(?:.*?acct\=\\?\"?(?P<user>.*?)\\?\"?\s+exe\=\\?\"?(?P<process>.*?)\\?\"?\s+)?(?:.*?cmd\=\"(?P<cmd>.*?)\")?'
  event-key-format: '{type}'
  event-key-mapping:
    'USER_CMD':
      annotate:
        Stream: AUDITD
        Action: USER_COMMAND_EXECUTED
        Status: PASSED
      translate:
        user: User
        cmd: CommandLine
        process: Process
        ProcessArgs: ProcessArgs 
    'CRED_DISP':
      annotate:
        Stream: IAM
        Action: CREDENTIAL_DISPOSED
        Status: PASSED
      translate:
        user: User
        TargetUser: TargetUser
        Role: Role               

  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      datetime: SystemTstamp
      hostname: System

- first-match: 'Accepted\s+publickey\s+for\s+\S+\s+from\s+[\d\.]+\s+port\s+\d+\s+\w+'
  decoder: regex
  decoder-regex: '(?P<datetime>(?:\w{3}\s+\d{1,2}\s+[\d\:]+|\d{4}\-\d{1,2}\-\d{1,2}T[\d\:]+)).*?(?:(?P<hostname>\S+))?\s+(?P<daemon>\w+)\[(?P<pid>\d+)\]\:.*?(?P<action>\w+\s+\w+)\s+for\s+(?P<user>\S+)\s+from\s+(?P<src>[\d\.]+)\s+\w+\s+\d+\s+(?P<authproto>\w+)\:?'
  event-key-format: '{action}'
  event-key-mapping:
    'Accepted publickey': 
      annotate:
        Stream: AUTHENTICATION
        Action: LOGIN
        Status: PASSED
        AuthProto: SSH
      translate:
        src: SrcIP
        user: User
         
  fallback:
    annotate:
      EventName: Generic NIX Event
      Stream: OTHER

  globals:
    translate:
      hostname: System
      datetime: SystemTstamp